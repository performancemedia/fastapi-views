{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"fastapi-views FastAPI Class Views and utilities Version: 0.3.0 Documentation: https://performancemedia.github.io/fastapi-views/ Repository: https://github.com/performancemedia/fastapi-views Installation pip install fastapi-views Usage from typing import Optional from uuid import UUID from fastapi_views import Serializer from fastapi_views.views.viewsets import AsyncAPIViewSet class ItemSchema ( Serializer ): id : UUID name : str price : int items = {} class MyViewSet ( AsyncAPIViewSet ): response_schema = ItemSchema async def list ( self , * args , ** kwargs ): return list ( items . values ()) async def create ( self , item : ItemSchema ) -> ItemSchema : items [ item . id ] = item return item async def retrieve ( self , id : UUID ) -> Optional [ ItemSchema ]: return items . get ( id ) async def update ( self , item : ItemSchema ): items [ item . id ] = item async def destroy ( self , id : UUID ) -> None : items . pop ( id , None ) Installation pip install fastapi-views or poetry add fastapi-views","title":"FastAPI Views"},{"location":"#fastapi-views","text":"FastAPI Class Views and utilities Version: 0.3.0 Documentation: https://performancemedia.github.io/fastapi-views/ Repository: https://github.com/performancemedia/fastapi-views","title":"fastapi-views"},{"location":"#installation","text":"pip install fastapi-views","title":"Installation"},{"location":"#usage","text":"from typing import Optional from uuid import UUID from fastapi_views import Serializer from fastapi_views.views.viewsets import AsyncAPIViewSet class ItemSchema ( Serializer ): id : UUID name : str price : int items = {} class MyViewSet ( AsyncAPIViewSet ): response_schema = ItemSchema async def list ( self , * args , ** kwargs ): return list ( items . values ()) async def create ( self , item : ItemSchema ) -> ItemSchema : items [ item . id ] = item return item async def retrieve ( self , id : UUID ) -> Optional [ ItemSchema ]: return items . get ( id ) async def update ( self , item : ItemSchema ): items [ item . id ] = item async def destroy ( self , id : UUID ) -> None : items . pop ( id , None )","title":"Usage"},{"location":"#installation_1","text":"pip install fastapi-views or poetry add fastapi-views","title":"Installation"},{"location":"features/","text":"Features Class Based Views Basic View and APIView classes for custom endpoints APIViews (async classes are prefixed with Async ) ListAPIView CreateAPIView RetrieveAPIView UpdateAPIView PartialUpdateAPIView DestroyAPIView Generics with pluggable Repository interface, no dependency on ORM ViewSets Helpers & Utils APIModel CamelCaseAPIModel Serializer - smart and fast serialization using orjson CamelCaseSerializer FastAPI app configuration & factory (via settings) Openapi operation id simplification Healthcheck Prometheus metrics error handlers Http Problem Details implementation","title":"Features"},{"location":"features/#features","text":"","title":"Features"},{"location":"features/#class-based-views","text":"Basic View and APIView classes for custom endpoints APIViews (async classes are prefixed with Async ) ListAPIView CreateAPIView RetrieveAPIView UpdateAPIView PartialUpdateAPIView DestroyAPIView Generics with pluggable Repository interface, no dependency on ORM ViewSets","title":"Class Based Views"},{"location":"features/#helpers-utils","text":"APIModel CamelCaseAPIModel Serializer - smart and fast serialization using orjson CamelCaseSerializer FastAPI app configuration & factory (via settings) Openapi operation id simplification Healthcheck Prometheus metrics error handlers Http Problem Details implementation","title":"Helpers &amp; Utils"},{"location":"usage/","text":"Basic views from fastapi_views.views import get , post from fastapi_views.views.api import View class CustomView ( View ): @get ( \"\" ) async def list_come_items ( self ): ... @post ( \"\" ) async def add_item ( self ): ... ApiView from pydantic import BaseModel from fastapi_views.views.functools import get , post from fastapi_views.views.api import APIView class ItemSerializer ( BaseModel ): id : int name : str price : int class CustomView ( APIView ): response_schema = ItemSerializer @get ( \"\" ) async def list_come_items ( self ) -> list [ ItemSerializer ]: ... @post ( \"\" ) async def add_item ( self , item : ItemSerializer ) -> ItemSerializer : ... Generics from fastapi_views.views.generics import GenericListView class MyGenericView ( GenericListView ): response_schema = ... repository = ... # <- set your own interface provider Viewsets from typing import Optional from uuid import UUID from pydantic import BaseModel from fastapi_views.views.viewsets import AsyncAPIViewSet class ItemSchema ( BaseModel ): id : UUID name : str price : int items = {} class MyViewSet ( AsyncAPIViewSet ): api_component_name = \"Item\" response_schema = ItemSchema async def list ( self ): return list ( items . values ()) async def create ( self , item : ItemSchema ) -> ItemSchema : items [ item . id ] = item return item async def retrieve ( self , id : UUID ) -> Optional [ ItemSchema ]: return items . get ( id ) async def update ( self , item : ItemSchema ): items [ item . id ] = item async def destroy ( self , id : UUID ) -> None : items . pop ( id , None )","title":"Usage"},{"location":"usage/#basic-views","text":"from fastapi_views.views import get , post from fastapi_views.views.api import View class CustomView ( View ): @get ( \"\" ) async def list_come_items ( self ): ... @post ( \"\" ) async def add_item ( self ): ...","title":"Basic views"},{"location":"usage/#apiview","text":"from pydantic import BaseModel from fastapi_views.views.functools import get , post from fastapi_views.views.api import APIView class ItemSerializer ( BaseModel ): id : int name : str price : int class CustomView ( APIView ): response_schema = ItemSerializer @get ( \"\" ) async def list_come_items ( self ) -> list [ ItemSerializer ]: ... @post ( \"\" ) async def add_item ( self , item : ItemSerializer ) -> ItemSerializer : ...","title":"ApiView"},{"location":"usage/#generics","text":"from fastapi_views.views.generics import GenericListView class MyGenericView ( GenericListView ): response_schema = ... repository = ... # <- set your own interface provider","title":"Generics"},{"location":"usage/#viewsets","text":"from typing import Optional from uuid import UUID from pydantic import BaseModel from fastapi_views.views.viewsets import AsyncAPIViewSet class ItemSchema ( BaseModel ): id : UUID name : str price : int items = {} class MyViewSet ( AsyncAPIViewSet ): api_component_name = \"Item\" response_schema = ItemSchema async def list ( self ): return list ( items . values ()) async def create ( self , item : ItemSchema ) -> ItemSchema : items [ item . id ] = item return item async def retrieve ( self , id : UUID ) -> Optional [ ItemSchema ]: return items . get ( id ) async def update ( self , item : ItemSchema ): items [ item . id ] = item async def destroy ( self , id : UUID ) -> None : items . pop ( id , None )","title":"Viewsets"},{"location":"reference/generics/","text":"AsyncGenericCreateView Bases: AsyncCreateAPIView , GenericViewMixin [ AsyncRepository ] Async generic create view Source code in fastapi_views/views/generics.py 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 class AsyncGenericCreateView ( AsyncCreateAPIView , GenericViewMixin [ AsyncRepository ]): \"\"\"Async generic create view\"\"\" create_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_create_endpoint ( cls ): param_type = cls . get_params ( \"create\" ) create_schema_type = cls . create_schema or cls . response_schema async def endpoint ( create_schema : create_schema_type , self : AsyncGenericCreateView = Depends ( cls ), params : param_type = Depends ( param_type ), ): obj = await self . create ( create_schema . model_dump (), ** params . model_dump ( exclude_none = True ), ) if self . return_on_create : return self . serialize_response ( \"create\" , obj , status_code = HTTP_201_CREATED ) return Response ( status_code = HTTP_201_CREATED ) cls . _patch_metadata ( endpoint , cls . create ) return endpoint @catch_defined async def create ( self , entity , ** kwargs ): return await self . repository . create ( entity , ** kwargs ) AsyncGenericDestroyView Bases: AsyncDestroyAPIView , GenericDetailViewMixin [ AsyncRepository ] Async generic destroy view Source code in fastapi_views/views/generics.py 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 class AsyncGenericDestroyView ( AsyncDestroyAPIView , GenericDetailViewMixin [ AsyncRepository ] ): \"\"\"Async generic destroy view\"\"\" @classmethod def get_destroy_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"destroy\" ) pk_type = cls . pk async def endpoint ( self = Depends ( cls ), pk = Depends ( pk_type ), params = Depends ( param_type ) ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } await self . destroy ( ** kwargs ) return Response ( status_code = HTTP_204_NO_CONTENT ) cls . _patch_metadata ( endpoint , cls . destroy ) return endpoint @catch_defined async def destroy ( self , * args , ** kwargs ) -> None : await self . repository . delete ( * args , ** kwargs ) AsyncGenericListView Bases: AsyncListAPIView , GenericViewMixin [ AsyncRepository ] Async generic list view Source code in fastapi_views/views/generics.py 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 class AsyncGenericListView ( AsyncListAPIView , GenericViewMixin [ AsyncRepository ]): \"\"\"Async generic list view\"\"\" @classmethod def get_list_endpoint ( cls ): param_type = cls . get_params ( \"list\" ) async def endpoint ( self : AsyncGenericListView = Depends ( cls ), params : param_type = Depends ( param_type ), ): objects = await self . list ( ** params . model_dump ( exclude_none = True )) return self . serialize_response ( \"list\" , objects , status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . list ) return endpoint @catch_defined async def list ( self , * args , ** kwargs ): return await self . repository . list ( * args , ** kwargs ) AsyncGenericPartialUpdateView Bases: AsyncPartialUpdateAPIView , GenericDetailViewMixin [ AsyncRepository ] Async generic partial update view Source code in fastapi_views/views/generics.py 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 class AsyncGenericPartialUpdateView ( AsyncPartialUpdateAPIView , GenericDetailViewMixin [ AsyncRepository ] ): \"\"\"Async generic partial update view\"\"\" partial_update_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_partial_update_endpoint ( cls ): param_type = cls . get_params ( \"partial_update\" ) pk_type = cls . pk partial_update_schema_type = cls . partial_update_schema or cls . response_schema async def endpoint ( partial_update_schema : partial_update_schema_type , self = Depends ( cls ), pk = Depends ( pk_type ), params = Depends ( param_type ), ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = await self . partial_update ( partial_update_schema = partial_update_schema , ** kwargs ) if self . return_on_update : return self . serialize_response ( \"partial_update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . partial_update ) return endpoint @catch_defined async def partial_update ( self , * args , ** kwargs ) -> Any : return await self . repository . update ( * args , ** kwargs ) AsyncGenericRetrieveView Bases: AsyncRetrieveAPIView , GenericDetailViewMixin [ AsyncRepository ] Async generic retrieve view Source code in fastapi_views/views/generics.py 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 class AsyncGenericRetrieveView ( AsyncRetrieveAPIView , GenericDetailViewMixin [ AsyncRepository ] ): \"\"\"Async generic retrieve view\"\"\" @classmethod def get_retrieve_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"retrieve\" ) pk_type = cls . pk async def endpoint ( self : AsyncGenericRetrieveView = Depends ( cls ), pk : pk_type = Depends ( pk_type ), params : param_type = Depends ( param_type ), ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = await self . retrieve ( ** kwargs ) if obj is None : self . raise_not_found_error () return self . serialize_response ( \"retrieve\" , obj ) cls . _patch_metadata ( endpoint , cls . retrieve ) return endpoint @catch_defined async def retrieve ( self , * args , ** kwargs ): return await self . repository . retrieve ( * args , ** kwargs ) AsyncGenericUpdateView Bases: AsyncUpdateAPIView , GenericDetailViewMixin [ AsyncRepository ] Async generic update view Source code in fastapi_views/views/generics.py 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 class AsyncGenericUpdateView ( AsyncUpdateAPIView , GenericDetailViewMixin [ AsyncRepository ] ): \"\"\"Async generic update view\"\"\" update_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_update_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"update\" ) pk_type = cls . pk update_schema_type = cls . update_schema or cls . response_schema async def endpoint ( update_schema : update_schema_type , self : AsyncGenericUpdateView = Depends ( cls ), pk : pk_type = Depends ( pk_type ), params : param_type = Depends ( param_type ), ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = await self . update ( update_schema . model_dump (), ** kwargs ) if self . return_on_update : return self . serialize_response ( \"update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . update ) return endpoint @catch_defined async def update ( self , entity , ** kwargs ) -> Any : return await self . repository . update ( entity , ** kwargs ) GenericCreateView Bases: CreateAPIView , GenericViewMixin [ Repository ] Sync generic create view Source code in fastapi_views/views/generics.py 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 class GenericCreateView ( CreateAPIView , GenericViewMixin [ Repository ]): \"\"\"Sync generic create view\"\"\" create_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_create_endpoint ( cls ): param_type = cls . get_params ( \"create\" ) create_schema_type = cls . create_schema or cls . response_schema def endpoint ( create_schema : create_schema_type , self : GenericCreateView = Depends ( cls ), params : param_type = Depends ( param_type ), ): obj = self . create ( create_schema . model_dump (), ** params . model_dump ( exclude_none = True ), ) if self . return_on_create : return self . serialize_response ( \"create\" , obj , status_code = HTTP_201_CREATED ) return Response ( status_code = HTTP_201_CREATED ) cls . _patch_metadata ( endpoint , cls . create ) return endpoint @catch_defined def create ( self , entity , ** kwargs ): return self . repository . create ( entity , ** kwargs ) GenericDestroyView Bases: AsyncDestroyAPIView , GenericDetailViewMixin [ Repository ] Sync generic destroy view Source code in fastapi_views/views/generics.py 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 class GenericDestroyView ( AsyncDestroyAPIView , GenericDetailViewMixin [ Repository ]): \"\"\"Sync generic destroy view\"\"\" @classmethod def get_destroy_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"destroy\" ) pk_type = cls . pk def endpoint ( self = Depends ( cls ), pk = Depends ( pk_type ), params = Depends ( param_type ) ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } self . destroy ( ** kwargs ) return Response ( status_code = HTTP_204_NO_CONTENT ) cls . _patch_metadata ( endpoint , cls . destroy ) return endpoint @catch_defined def destroy ( self , ** kwargs ) -> None : self . repository . delete ( ** kwargs ) GenericListView Bases: ListAPIView , GenericViewMixin [ Repository ] Sync generic list view Source code in fastapi_views/views/generics.py 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 class GenericListView ( ListAPIView , GenericViewMixin [ Repository ]): \"\"\"Sync generic list view\"\"\" @classmethod def get_list_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"list\" ) def endpoint ( self : GenericListView = Depends ( cls ), params : param_type = Depends ( param_type ), ): objects = self . list ( ** params . model_dump ( exclude_none = True )) return self . serialize_response ( \"list\" , objects , status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . list ) return endpoint @catch_defined def list ( self , ** kwargs ): return self . repository . list ( ** kwargs ) GenericPartialUpdateView Bases: PartialUpdateAPIView , GenericDetailViewMixin [ Repository ] Sync generic partial update view Source code in fastapi_views/views/generics.py 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 class GenericPartialUpdateView ( PartialUpdateAPIView , GenericDetailViewMixin [ Repository ] ): \"\"\"Sync generic partial update view\"\"\" partial_update_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_partial_update_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"partial_update\" ) pk_type = cls . pk partial_update_schema_type = cls . partial_update_schema or cls . response_schema def endpoint ( partial_update_schema : partial_update_schema_type , self = Depends ( cls ), pk = Depends ( pk_type ), params = Depends ( param_type ), ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = self . partial_update ( partial_update_schema . model_dump (), ** kwargs ) if self . return_on_update : return self . serialize_response ( \"partial_update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . partial_update ) return endpoint @catch_defined def partial_update ( self , * args , ** kwargs ) -> Any : return self . repository . update ( * args , ** kwargs ) GenericRetrieveView Bases: RetrieveAPIView , GenericDetailViewMixin [ Repository ] Sync generic retrieve view Source code in fastapi_views/views/generics.py 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 class GenericRetrieveView ( RetrieveAPIView , GenericDetailViewMixin [ Repository ]): \"\"\"Sync generic retrieve view\"\"\" @classmethod def get_retrieve_endpoint ( cls ): param_type = cls . get_params ( \"retrieve\" ) pk_type = cls . pk def endpoint ( self : GenericRetrieveView = Depends ( cls ), pk : pk_type = Depends ( pk_type ), params : param_type = Depends ( param_type ), ) -> Endpoint : kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = self . retrieve ( ** kwargs ) if obj is None and self . raise_on_none : self . raise_not_found_error () return self . serialize_response ( \"retrieve\" , obj ) cls . _patch_metadata ( endpoint , cls . retrieve ) return endpoint @catch_defined def retrieve ( self , ** kwargs ) -> Any : return self . repository . retrieve ( ** kwargs ) GenericUpdateView Bases: AsyncUpdateAPIView , GenericDetailViewMixin [ Repository ] Sync generic update view Source code in fastapi_views/views/generics.py 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 class GenericUpdateView ( AsyncUpdateAPIView , GenericDetailViewMixin [ Repository ]): \"\"\"Sync generic update view\"\"\" update_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_update_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"update\" ) pk_type = cls . pk update_schema_type = cls . update_schema or cls . response_schema def endpoint ( update_schema : update_schema_type , self : GenericUpdateView = Depends ( cls ), pk : pk_type = Depends ( pk_type ), params : param_type = Depends ( param_type ), ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = self . update ( update_schema . model_dump (), ** kwargs ) if self . return_on_update : return self . serialize_response ( \"update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . update ) return endpoint @catch_defined def update ( self , * args , ** kwargs ) -> Any : return self . repository . update ( * args , ** kwargs )","title":"Generic Views"},{"location":"reference/generics/#fastapi_views.views.generics.AsyncGenericCreateView","text":"Bases: AsyncCreateAPIView , GenericViewMixin [ AsyncRepository ] Async generic create view Source code in fastapi_views/views/generics.py 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 class AsyncGenericCreateView ( AsyncCreateAPIView , GenericViewMixin [ AsyncRepository ]): \"\"\"Async generic create view\"\"\" create_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_create_endpoint ( cls ): param_type = cls . get_params ( \"create\" ) create_schema_type = cls . create_schema or cls . response_schema async def endpoint ( create_schema : create_schema_type , self : AsyncGenericCreateView = Depends ( cls ), params : param_type = Depends ( param_type ), ): obj = await self . create ( create_schema . model_dump (), ** params . model_dump ( exclude_none = True ), ) if self . return_on_create : return self . serialize_response ( \"create\" , obj , status_code = HTTP_201_CREATED ) return Response ( status_code = HTTP_201_CREATED ) cls . _patch_metadata ( endpoint , cls . create ) return endpoint @catch_defined async def create ( self , entity , ** kwargs ): return await self . repository . create ( entity , ** kwargs )","title":"AsyncGenericCreateView"},{"location":"reference/generics/#fastapi_views.views.generics.AsyncGenericDestroyView","text":"Bases: AsyncDestroyAPIView , GenericDetailViewMixin [ AsyncRepository ] Async generic destroy view Source code in fastapi_views/views/generics.py 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 class AsyncGenericDestroyView ( AsyncDestroyAPIView , GenericDetailViewMixin [ AsyncRepository ] ): \"\"\"Async generic destroy view\"\"\" @classmethod def get_destroy_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"destroy\" ) pk_type = cls . pk async def endpoint ( self = Depends ( cls ), pk = Depends ( pk_type ), params = Depends ( param_type ) ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } await self . destroy ( ** kwargs ) return Response ( status_code = HTTP_204_NO_CONTENT ) cls . _patch_metadata ( endpoint , cls . destroy ) return endpoint @catch_defined async def destroy ( self , * args , ** kwargs ) -> None : await self . repository . delete ( * args , ** kwargs )","title":"AsyncGenericDestroyView"},{"location":"reference/generics/#fastapi_views.views.generics.AsyncGenericListView","text":"Bases: AsyncListAPIView , GenericViewMixin [ AsyncRepository ] Async generic list view Source code in fastapi_views/views/generics.py 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 class AsyncGenericListView ( AsyncListAPIView , GenericViewMixin [ AsyncRepository ]): \"\"\"Async generic list view\"\"\" @classmethod def get_list_endpoint ( cls ): param_type = cls . get_params ( \"list\" ) async def endpoint ( self : AsyncGenericListView = Depends ( cls ), params : param_type = Depends ( param_type ), ): objects = await self . list ( ** params . model_dump ( exclude_none = True )) return self . serialize_response ( \"list\" , objects , status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . list ) return endpoint @catch_defined async def list ( self , * args , ** kwargs ): return await self . repository . list ( * args , ** kwargs )","title":"AsyncGenericListView"},{"location":"reference/generics/#fastapi_views.views.generics.AsyncGenericPartialUpdateView","text":"Bases: AsyncPartialUpdateAPIView , GenericDetailViewMixin [ AsyncRepository ] Async generic partial update view Source code in fastapi_views/views/generics.py 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 class AsyncGenericPartialUpdateView ( AsyncPartialUpdateAPIView , GenericDetailViewMixin [ AsyncRepository ] ): \"\"\"Async generic partial update view\"\"\" partial_update_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_partial_update_endpoint ( cls ): param_type = cls . get_params ( \"partial_update\" ) pk_type = cls . pk partial_update_schema_type = cls . partial_update_schema or cls . response_schema async def endpoint ( partial_update_schema : partial_update_schema_type , self = Depends ( cls ), pk = Depends ( pk_type ), params = Depends ( param_type ), ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = await self . partial_update ( partial_update_schema = partial_update_schema , ** kwargs ) if self . return_on_update : return self . serialize_response ( \"partial_update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . partial_update ) return endpoint @catch_defined async def partial_update ( self , * args , ** kwargs ) -> Any : return await self . repository . update ( * args , ** kwargs )","title":"AsyncGenericPartialUpdateView"},{"location":"reference/generics/#fastapi_views.views.generics.AsyncGenericRetrieveView","text":"Bases: AsyncRetrieveAPIView , GenericDetailViewMixin [ AsyncRepository ] Async generic retrieve view Source code in fastapi_views/views/generics.py 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 class AsyncGenericRetrieveView ( AsyncRetrieveAPIView , GenericDetailViewMixin [ AsyncRepository ] ): \"\"\"Async generic retrieve view\"\"\" @classmethod def get_retrieve_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"retrieve\" ) pk_type = cls . pk async def endpoint ( self : AsyncGenericRetrieveView = Depends ( cls ), pk : pk_type = Depends ( pk_type ), params : param_type = Depends ( param_type ), ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = await self . retrieve ( ** kwargs ) if obj is None : self . raise_not_found_error () return self . serialize_response ( \"retrieve\" , obj ) cls . _patch_metadata ( endpoint , cls . retrieve ) return endpoint @catch_defined async def retrieve ( self , * args , ** kwargs ): return await self . repository . retrieve ( * args , ** kwargs )","title":"AsyncGenericRetrieveView"},{"location":"reference/generics/#fastapi_views.views.generics.AsyncGenericUpdateView","text":"Bases: AsyncUpdateAPIView , GenericDetailViewMixin [ AsyncRepository ] Async generic update view Source code in fastapi_views/views/generics.py 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 class AsyncGenericUpdateView ( AsyncUpdateAPIView , GenericDetailViewMixin [ AsyncRepository ] ): \"\"\"Async generic update view\"\"\" update_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_update_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"update\" ) pk_type = cls . pk update_schema_type = cls . update_schema or cls . response_schema async def endpoint ( update_schema : update_schema_type , self : AsyncGenericUpdateView = Depends ( cls ), pk : pk_type = Depends ( pk_type ), params : param_type = Depends ( param_type ), ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = await self . update ( update_schema . model_dump (), ** kwargs ) if self . return_on_update : return self . serialize_response ( \"update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . update ) return endpoint @catch_defined async def update ( self , entity , ** kwargs ) -> Any : return await self . repository . update ( entity , ** kwargs )","title":"AsyncGenericUpdateView"},{"location":"reference/generics/#fastapi_views.views.generics.GenericCreateView","text":"Bases: CreateAPIView , GenericViewMixin [ Repository ] Sync generic create view Source code in fastapi_views/views/generics.py 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 class GenericCreateView ( CreateAPIView , GenericViewMixin [ Repository ]): \"\"\"Sync generic create view\"\"\" create_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_create_endpoint ( cls ): param_type = cls . get_params ( \"create\" ) create_schema_type = cls . create_schema or cls . response_schema def endpoint ( create_schema : create_schema_type , self : GenericCreateView = Depends ( cls ), params : param_type = Depends ( param_type ), ): obj = self . create ( create_schema . model_dump (), ** params . model_dump ( exclude_none = True ), ) if self . return_on_create : return self . serialize_response ( \"create\" , obj , status_code = HTTP_201_CREATED ) return Response ( status_code = HTTP_201_CREATED ) cls . _patch_metadata ( endpoint , cls . create ) return endpoint @catch_defined def create ( self , entity , ** kwargs ): return self . repository . create ( entity , ** kwargs )","title":"GenericCreateView"},{"location":"reference/generics/#fastapi_views.views.generics.GenericDestroyView","text":"Bases: AsyncDestroyAPIView , GenericDetailViewMixin [ Repository ] Sync generic destroy view Source code in fastapi_views/views/generics.py 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 class GenericDestroyView ( AsyncDestroyAPIView , GenericDetailViewMixin [ Repository ]): \"\"\"Sync generic destroy view\"\"\" @classmethod def get_destroy_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"destroy\" ) pk_type = cls . pk def endpoint ( self = Depends ( cls ), pk = Depends ( pk_type ), params = Depends ( param_type ) ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } self . destroy ( ** kwargs ) return Response ( status_code = HTTP_204_NO_CONTENT ) cls . _patch_metadata ( endpoint , cls . destroy ) return endpoint @catch_defined def destroy ( self , ** kwargs ) -> None : self . repository . delete ( ** kwargs )","title":"GenericDestroyView"},{"location":"reference/generics/#fastapi_views.views.generics.GenericListView","text":"Bases: ListAPIView , GenericViewMixin [ Repository ] Sync generic list view Source code in fastapi_views/views/generics.py 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 class GenericListView ( ListAPIView , GenericViewMixin [ Repository ]): \"\"\"Sync generic list view\"\"\" @classmethod def get_list_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"list\" ) def endpoint ( self : GenericListView = Depends ( cls ), params : param_type = Depends ( param_type ), ): objects = self . list ( ** params . model_dump ( exclude_none = True )) return self . serialize_response ( \"list\" , objects , status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . list ) return endpoint @catch_defined def list ( self , ** kwargs ): return self . repository . list ( ** kwargs )","title":"GenericListView"},{"location":"reference/generics/#fastapi_views.views.generics.GenericPartialUpdateView","text":"Bases: PartialUpdateAPIView , GenericDetailViewMixin [ Repository ] Sync generic partial update view Source code in fastapi_views/views/generics.py 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 class GenericPartialUpdateView ( PartialUpdateAPIView , GenericDetailViewMixin [ Repository ] ): \"\"\"Sync generic partial update view\"\"\" partial_update_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_partial_update_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"partial_update\" ) pk_type = cls . pk partial_update_schema_type = cls . partial_update_schema or cls . response_schema def endpoint ( partial_update_schema : partial_update_schema_type , self = Depends ( cls ), pk = Depends ( pk_type ), params = Depends ( param_type ), ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = self . partial_update ( partial_update_schema . model_dump (), ** kwargs ) if self . return_on_update : return self . serialize_response ( \"partial_update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . partial_update ) return endpoint @catch_defined def partial_update ( self , * args , ** kwargs ) -> Any : return self . repository . update ( * args , ** kwargs )","title":"GenericPartialUpdateView"},{"location":"reference/generics/#fastapi_views.views.generics.GenericRetrieveView","text":"Bases: RetrieveAPIView , GenericDetailViewMixin [ Repository ] Sync generic retrieve view Source code in fastapi_views/views/generics.py 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 class GenericRetrieveView ( RetrieveAPIView , GenericDetailViewMixin [ Repository ]): \"\"\"Sync generic retrieve view\"\"\" @classmethod def get_retrieve_endpoint ( cls ): param_type = cls . get_params ( \"retrieve\" ) pk_type = cls . pk def endpoint ( self : GenericRetrieveView = Depends ( cls ), pk : pk_type = Depends ( pk_type ), params : param_type = Depends ( param_type ), ) -> Endpoint : kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = self . retrieve ( ** kwargs ) if obj is None and self . raise_on_none : self . raise_not_found_error () return self . serialize_response ( \"retrieve\" , obj ) cls . _patch_metadata ( endpoint , cls . retrieve ) return endpoint @catch_defined def retrieve ( self , ** kwargs ) -> Any : return self . repository . retrieve ( ** kwargs )","title":"GenericRetrieveView"},{"location":"reference/generics/#fastapi_views.views.generics.GenericUpdateView","text":"Bases: AsyncUpdateAPIView , GenericDetailViewMixin [ Repository ] Sync generic update view Source code in fastapi_views/views/generics.py 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 class GenericUpdateView ( AsyncUpdateAPIView , GenericDetailViewMixin [ Repository ]): \"\"\"Sync generic update view\"\"\" update_schema : Optional [ type [ BaseModel ]] = None @classmethod def get_update_endpoint ( cls ) -> Endpoint : param_type = cls . get_params ( \"update\" ) pk_type = cls . pk update_schema_type = cls . update_schema or cls . response_schema def endpoint ( update_schema : update_schema_type , self : GenericUpdateView = Depends ( cls ), pk : pk_type = Depends ( pk_type ), params : param_type = Depends ( param_type ), ): kwargs = { ** pk . model_dump ( exclude_none = True ), ** params . model_dump ( exclude_none = True ), } obj = self . update ( update_schema . model_dump (), ** kwargs ) if self . return_on_update : return self . serialize_response ( \"update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_metadata ( endpoint , cls . update ) return endpoint @catch_defined def update ( self , * args , ** kwargs ) -> Any : return self . repository . update ( * args , ** kwargs )","title":"GenericUpdateView"},{"location":"reference/views/","text":"APIView Bases: View , ErrorHandlerMixin View with build-in json serialization via serializer and error handling Source code in fastapi_views/views/api.py 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 class APIView ( View , ErrorHandlerMixin ): \"\"\" View with build-in json serialization via `serializer` and error handling \"\"\" response_schema : Any serializer_options : SerializerOptions = { \"by_alias\" : True , \"from_attributes\" : True } @classmethod def get_response_schema ( cls , action : Action ) -> Any : return cls . response_schema @classmethod @functools . lru_cache ( maxsize = None , typed = True ) def get_serializer ( cls , action : Action ) -> TypeSerializer : response_schema = cls . get_response_schema ( action ) return TypeSerializer ( response_schema ) def serialize_response ( self , action : Action , content : Any , status_code : int = HTTP_200_OK ): if content and not isinstance ( content , bytes ): serializer = self . get_serializer ( action ) content = serializer . serialize ( content , ** self . serializer_options ) if self . response . status_code is None : self . response . status_code = status_code return self . get_response ( content ) AsyncCreateAPIView Bases: BaseCreateAPIView Async create api view Source code in fastapi_views/views/api.py 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 class AsyncCreateAPIView ( BaseCreateAPIView ): \"\"\"Async create api view\"\"\" @classmethod def get_create_endpoint ( cls ) -> Endpoint : async def endpoint ( self : AsyncCreateAPIView , * args , ** kwargs ): obj = await self . create ( * args , ** kwargs ) if self . return_on_create : return self . serialize_response ( \"create\" , obj , HTTP_201_CREATED ) return Response ( status_code = HTTP_201_CREATED ) cls . _patch_endpoint_signature ( endpoint , cls . create ) return endpoint if TYPE_CHECKING : create : Callable [ ... , Awaitable [ Any ]] else : @abstractmethod async def create ( self , * args , ** kwargs ) -> Any : raise NotImplementedError AsyncDestroyAPIView Bases: BaseDestroyAPIView Async destroy api view Source code in fastapi_views/views/api.py 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 class AsyncDestroyAPIView ( BaseDestroyAPIView ): \"\"\"Async destroy api view\"\"\" @classmethod def get_destroy_endpoint ( cls ) -> Endpoint : async def endpoint ( self , * args , ** kwargs ): await self . destroy ( * args , ** kwargs ) return Response ( status_code = HTTP_204_NO_CONTENT ) cls . _patch_endpoint_signature ( endpoint , cls . destroy ) return endpoint if TYPE_CHECKING : destroy : Callable [ ... , Awaitable [ None ]] else : @abstractmethod async def destroy ( self , * args , ** kwargs ) -> None : raise NotImplementedError AsyncListAPIView Bases: BaseListAPIView , ABC Async list api view Source code in fastapi_views/views/api.py 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 class AsyncListAPIView ( BaseListAPIView , ABC ): \"\"\"Async list api view\"\"\" @classmethod def get_list_endpoint ( cls ) -> Endpoint : async def endpoint ( self : AsyncListAPIView , * args , ** kwargs ): objects = await self . list ( * args , ** kwargs ) return self . serialize_response ( \"list\" , objects ) cls . _patch_endpoint_signature ( endpoint , cls . list ) return endpoint if TYPE_CHECKING : list : Callable [ ... , Awaitable [ Any ]] else : @abstractmethod async def list ( self , * args , ** kwargs ) -> Any : raise NotImplementedError AsyncPartialUpdateAPIView Bases: BasePartialUpdateAPIView Async partial update api view Source code in fastapi_views/views/api.py 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 class AsyncPartialUpdateAPIView ( BasePartialUpdateAPIView ): \"\"\"Async partial update api view\"\"\" @classmethod def get_partial_update_endpoint ( cls ) -> Endpoint : async def endpoint ( self , * args , ** kwargs ): obj = await self . partial_update ( * args , ** kwargs ) if obj is None and self . raise_on_none : self . raise_not_found_error () if self . return_on_update : return self . serialize_response ( \"partial_update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_endpoint_signature ( endpoint , cls . partial_update ) return endpoint if TYPE_CHECKING : partial_update : Callable [ ... , Awaitable [ Any ]] else : @abstractmethod async def partial_update ( self , * args , ** kwargs ): raise NotImplementedError AsyncRetrieveAPIView Bases: BaseRetrieveAPIView Async retrieve api view Source code in fastapi_views/views/api.py 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 class AsyncRetrieveAPIView ( BaseRetrieveAPIView ): \"\"\"Async retrieve api view\"\"\" @classmethod def get_retrieve_endpoint ( cls ) -> Endpoint : async def endpoint ( self : AsyncRetrieveAPIView , * args , ** kwargs ): obj = await self . retrieve ( * args , ** kwargs ) if obj is None and self . raise_on_none : self . raise_not_found_error () return self . serialize_response ( \"retrieve\" , obj ) cls . _patch_endpoint_signature ( endpoint , cls . retrieve ) return endpoint if TYPE_CHECKING : retrieve : Callable [ ... , Awaitable [ Any ]] else : @abstractmethod async def retrieve ( self , * args , ** kwargs ) -> Any : raise NotImplementedError AsyncUpdateAPIView Bases: BaseUpdateAPIView Async update api view Source code in fastapi_views/views/api.py 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 class AsyncUpdateAPIView ( BaseUpdateAPIView ): \"\"\"Async update api view\"\"\" @classmethod def get_update_endpoint ( cls ) -> Endpoint : async def endpoint ( self , * args , ** kwargs ): obj = await self . update ( * args , ** kwargs ) if not self . return_on_update : return Response ( status_code = HTTP_200_OK ) if obj is None and self . raise_on_none : self . raise_not_found_error () return self . serialize_response ( \"update\" , obj ) cls . _patch_endpoint_signature ( endpoint , cls . update ) return endpoint if TYPE_CHECKING : update : Callable [ ... , Awaitable [ Any ]] else : @abstractmethod async def update ( self , * args , ** kwargs ): raise NotImplementedError CreateAPIView Bases: BaseCreateAPIView Sync create api view Source code in fastapi_views/views/api.py 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 class CreateAPIView ( BaseCreateAPIView ): \"\"\"Sync create api view\"\"\" @classmethod def get_create_endpoint ( cls ) -> Endpoint : def endpoint ( self : CreateAPIView , * args , ** kwargs ): obj = self . create ( * args , ** kwargs ) if self . return_on_create : return self . serialize_response ( \"create\" , obj , HTTP_201_CREATED ) # return self.get_response(content=None, status_code=HTTP_201_CREATED) return Response ( status_code = HTTP_201_CREATED ) cls . _patch_endpoint_signature ( endpoint , cls . create ) return endpoint if TYPE_CHECKING : create : Callable [ ... , Any ] else : @abstractmethod def create ( self , * args , ** kwargs ) -> Any : raise NotImplementedError DestroyAPIView Bases: BaseDestroyAPIView Sync destroy api view Source code in fastapi_views/views/api.py 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 class DestroyAPIView ( BaseDestroyAPIView ): \"\"\"Sync destroy api view\"\"\" @classmethod def get_destroy_endpoint ( cls ) -> Endpoint : def endpoint ( self , * args , ** kwargs ): self . destroy ( * args , ** kwargs ) return Response ( status_code = HTTP_204_NO_CONTENT ) cls . _patch_endpoint_signature ( endpoint , cls . destroy ) return endpoint if TYPE_CHECKING : destroy : Callable [ ... , None ] else : @abstractmethod def destroy ( self , * args , ** kwargs ) -> None : raise NotImplementedError ListAPIView Bases: BaseListAPIView , ABC Sync list api view Source code in fastapi_views/views/api.py 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 class ListAPIView ( BaseListAPIView , ABC ): \"\"\"Sync list api view\"\"\" @classmethod def get_list_endpoint ( cls ) -> Endpoint : def endpoint ( self : ListAPIView , * args , ** kwargs ): objects = self . list ( * args , ** kwargs ) return self . serialize_response ( \"list\" , objects ) cls . _patch_endpoint_signature ( endpoint , cls . list ) return endpoint if TYPE_CHECKING : list : Callable [ ... , Any ] else : @abstractmethod def list ( self , * args , ** kwargs ) -> Any : raise NotImplementedError PartialUpdateAPIView Bases: BasePartialUpdateAPIView Sync partial update api view Source code in fastapi_views/views/api.py 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 class PartialUpdateAPIView ( BasePartialUpdateAPIView ): \"\"\"Sync partial update api view\"\"\" @classmethod def get_partial_update_endpoint ( cls ) -> Endpoint : def endpoint ( self , * args , ** kwargs ): obj = self . partial_update ( * args , ** kwargs ) if obj is None and self . raise_on_none : self . raise_not_found_error () if self . return_on_update : return self . serialize_response ( \"partial_update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_endpoint_signature ( endpoint , cls . partial_update ) return endpoint if TYPE_CHECKING : partial_update : Callable [ ... , Any ] else : @abstractmethod def partial_update ( self , * args , ** kwargs ): raise NotImplementedError RetrieveAPIView Bases: BaseRetrieveAPIView Sync retrieve api view Source code in fastapi_views/views/api.py 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 class RetrieveAPIView ( BaseRetrieveAPIView ): \"\"\"Sync retrieve api view\"\"\" @classmethod def get_retrieve_endpoint ( cls ) -> Endpoint : def endpoint ( self : RetrieveAPIView , * args , ** kwargs ): obj = self . retrieve ( * args , ** kwargs ) if obj is None and self . raise_on_none : self . raise_not_found_error () return self . serialize_response ( \"retrieve\" , obj ) cls . _patch_endpoint_signature ( endpoint , cls . retrieve ) return endpoint if TYPE_CHECKING : retrieve : Callable [ ... , Any ] else : @abstractmethod def retrieve ( self , * args , ** kwargs ) -> Any : raise NotImplementedError UpdateAPIView Bases: BaseUpdateAPIView Sync update api view Source code in fastapi_views/views/api.py 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 class UpdateAPIView ( BaseUpdateAPIView ): \"\"\"Sync update api view\"\"\" @classmethod def get_update_endpoint ( cls ) -> Endpoint : def endpoint ( self , * args , ** kwargs ): obj = self . update ( * args , ** kwargs ) if not self . return_on_update : return Response ( status_code = HTTP_200_OK ) if obj is None and self . raise_on_none : self . raise_not_found_error () return self . serialize_response ( \"update\" , obj ) cls . _patch_endpoint_signature ( endpoint , cls . update ) return endpoint if TYPE_CHECKING : update : Callable [ ... , Any ] else : @abstractmethod def update ( self , * args , ** kwargs ): raise NotImplementedError View Bases: ABC Basic View Class Usage: from fastapi_views.views.functools import get, post, delete class MyCustomViewClass(View): @get(\"\") async def get_items(self, ...): ... @post(path=\"\") Source code in fastapi_views/views/api.py 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 class View ( ABC ): \"\"\" Basic View Class Usage: from fastapi_views.views.functools import get, post, delete class MyCustomViewClass(View): @get(\"\") async def get_items(self, ...): ... @post(path=\"\") \"\"\" api_component_name : str default_response_class : type [ Response ] = JsonResponse errors : tuple [ APIError , ... ] = () def __init__ ( self , request : Request , response : Response ) -> None : self . request = request self . response = response @classmethod def get_name ( cls ) -> str : return getattr ( cls , \"api_component_name\" , cls . __name__ ) @classmethod def get_slug_name ( cls ) -> str : return f \" { cls . get_name () . lower () . replace ( ' ' , '_' ) } \" @classmethod def get_api_actions ( cls , prefix : str = \"\" ): yield from cls . get_custom_api_actions ( prefix ) @classmethod def get_custom_endpoint ( cls , func ): options = getattr ( func , \"kwargs\" , {}) status_code = options . get ( \"status_code\" , None ) response_class = options . get ( \"response_class\" , None ) async def _async_endpoint ( self , * args , ** kwargs ): res = await func ( self , * args , ** kwargs ) return self . get_response ( content = res , status_code = status_code , response_class = response_class ) def _sync_endpoint ( self , * args , ** kwargs ): res = func ( self , * args , ** kwargs ) return self . get_response ( content = res , status_code = status_code , response_class = response_class ) endpoint = ( _async_endpoint if asyncio . iscoroutinefunction ( func ) else _sync_endpoint ) cls . _patch_endpoint_signature ( endpoint , func ) return endpoint @classmethod def get_custom_api_actions ( cls , prefix : str = \"\" ): for _ , route_endpoint in inspect . getmembers ( cls , lambda member : callable ( member ) and hasattr ( member , VIEWSET_ROUTE_FLAG ) ): endpoint = cls . get_custom_endpoint ( route_endpoint ) yield cls . get_api_action ( endpoint , prefix = prefix , name = f \" { endpoint . __name__ } { cls . get_name () } \" ) @classmethod def get_api_action ( cls , endpoint : Callable , prefix : str = \"\" , path : str = \"\" , ** kwargs ) -> dict [ str , Any ]: kw = getattr ( endpoint , \"kwargs\" , {}) kwargs . update ( kw ) path = kwargs . get ( \"path\" , path ) kwargs [ \"endpoint\" ] = endpoint kwargs [ \"path\" ] = prefix + path kwargs . setdefault ( \"name\" , endpoint . __name__ ) endpoint_name = kwargs [ \"name\" ] kwargs . setdefault ( \"methods\" , [ \"GET\" ]) kwargs . setdefault ( \"operation_id\" , f \" { cls . get_slug_name () } _ { endpoint_name } \" ) kwargs [ \"responses\" ] = { e . model . get_status (): { \"model\" : e . model } for e in cls . errors } | kwargs . get ( \"responses\" , {}) return kwargs @classmethod def _patch_metadata ( cls , endpoint , method : Callable ) -> None : endpoint . __doc__ = method . __doc__ endpoint . __name__ = method . __name__ endpoint . kwargs = getattr ( method , \"kwargs\" , {}) @classmethod def _patch_endpoint_signature ( cls , endpoint , method : Callable ) -> None : old_signature = inspect . signature ( method ) old_parameters : list [ inspect . Parameter ] = list ( old_signature . parameters . values () ) old_first_parameter = old_parameters [ 0 ] new_first_parameter = old_first_parameter . replace ( default = Depends ( cls )) new_parameters = [ new_first_parameter ] + [ parameter . replace ( kind = inspect . Parameter . KEYWORD_ONLY ) for parameter in old_parameters [ 1 :] ] new_signature = old_signature . replace ( parameters = new_parameters ) endpoint . __signature__ = new_signature cls . _patch_metadata ( endpoint , method ) def get_response ( self , content : Any , status_code : Optional [ int ] = None , response_class : Optional [ type [ Response ]] = None , ) -> Response : if isinstance ( content , Response ): return content response_class = response_class or self . default_response_class return response_class ( content = content , status_code = status_code or self . response . status_code or HTTP_200_OK , headers = dict ( self . response . headers ), )","title":"APIViews"},{"location":"reference/views/#fastapi_views.views.api.APIView","text":"Bases: View , ErrorHandlerMixin View with build-in json serialization via serializer and error handling Source code in fastapi_views/views/api.py 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 class APIView ( View , ErrorHandlerMixin ): \"\"\" View with build-in json serialization via `serializer` and error handling \"\"\" response_schema : Any serializer_options : SerializerOptions = { \"by_alias\" : True , \"from_attributes\" : True } @classmethod def get_response_schema ( cls , action : Action ) -> Any : return cls . response_schema @classmethod @functools . lru_cache ( maxsize = None , typed = True ) def get_serializer ( cls , action : Action ) -> TypeSerializer : response_schema = cls . get_response_schema ( action ) return TypeSerializer ( response_schema ) def serialize_response ( self , action : Action , content : Any , status_code : int = HTTP_200_OK ): if content and not isinstance ( content , bytes ): serializer = self . get_serializer ( action ) content = serializer . serialize ( content , ** self . serializer_options ) if self . response . status_code is None : self . response . status_code = status_code return self . get_response ( content )","title":"APIView"},{"location":"reference/views/#fastapi_views.views.api.AsyncCreateAPIView","text":"Bases: BaseCreateAPIView Async create api view Source code in fastapi_views/views/api.py 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 class AsyncCreateAPIView ( BaseCreateAPIView ): \"\"\"Async create api view\"\"\" @classmethod def get_create_endpoint ( cls ) -> Endpoint : async def endpoint ( self : AsyncCreateAPIView , * args , ** kwargs ): obj = await self . create ( * args , ** kwargs ) if self . return_on_create : return self . serialize_response ( \"create\" , obj , HTTP_201_CREATED ) return Response ( status_code = HTTP_201_CREATED ) cls . _patch_endpoint_signature ( endpoint , cls . create ) return endpoint if TYPE_CHECKING : create : Callable [ ... , Awaitable [ Any ]] else : @abstractmethod async def create ( self , * args , ** kwargs ) -> Any : raise NotImplementedError","title":"AsyncCreateAPIView"},{"location":"reference/views/#fastapi_views.views.api.AsyncDestroyAPIView","text":"Bases: BaseDestroyAPIView Async destroy api view Source code in fastapi_views/views/api.py 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 class AsyncDestroyAPIView ( BaseDestroyAPIView ): \"\"\"Async destroy api view\"\"\" @classmethod def get_destroy_endpoint ( cls ) -> Endpoint : async def endpoint ( self , * args , ** kwargs ): await self . destroy ( * args , ** kwargs ) return Response ( status_code = HTTP_204_NO_CONTENT ) cls . _patch_endpoint_signature ( endpoint , cls . destroy ) return endpoint if TYPE_CHECKING : destroy : Callable [ ... , Awaitable [ None ]] else : @abstractmethod async def destroy ( self , * args , ** kwargs ) -> None : raise NotImplementedError","title":"AsyncDestroyAPIView"},{"location":"reference/views/#fastapi_views.views.api.AsyncListAPIView","text":"Bases: BaseListAPIView , ABC Async list api view Source code in fastapi_views/views/api.py 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 class AsyncListAPIView ( BaseListAPIView , ABC ): \"\"\"Async list api view\"\"\" @classmethod def get_list_endpoint ( cls ) -> Endpoint : async def endpoint ( self : AsyncListAPIView , * args , ** kwargs ): objects = await self . list ( * args , ** kwargs ) return self . serialize_response ( \"list\" , objects ) cls . _patch_endpoint_signature ( endpoint , cls . list ) return endpoint if TYPE_CHECKING : list : Callable [ ... , Awaitable [ Any ]] else : @abstractmethod async def list ( self , * args , ** kwargs ) -> Any : raise NotImplementedError","title":"AsyncListAPIView"},{"location":"reference/views/#fastapi_views.views.api.AsyncPartialUpdateAPIView","text":"Bases: BasePartialUpdateAPIView Async partial update api view Source code in fastapi_views/views/api.py 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 class AsyncPartialUpdateAPIView ( BasePartialUpdateAPIView ): \"\"\"Async partial update api view\"\"\" @classmethod def get_partial_update_endpoint ( cls ) -> Endpoint : async def endpoint ( self , * args , ** kwargs ): obj = await self . partial_update ( * args , ** kwargs ) if obj is None and self . raise_on_none : self . raise_not_found_error () if self . return_on_update : return self . serialize_response ( \"partial_update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_endpoint_signature ( endpoint , cls . partial_update ) return endpoint if TYPE_CHECKING : partial_update : Callable [ ... , Awaitable [ Any ]] else : @abstractmethod async def partial_update ( self , * args , ** kwargs ): raise NotImplementedError","title":"AsyncPartialUpdateAPIView"},{"location":"reference/views/#fastapi_views.views.api.AsyncRetrieveAPIView","text":"Bases: BaseRetrieveAPIView Async retrieve api view Source code in fastapi_views/views/api.py 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 class AsyncRetrieveAPIView ( BaseRetrieveAPIView ): \"\"\"Async retrieve api view\"\"\" @classmethod def get_retrieve_endpoint ( cls ) -> Endpoint : async def endpoint ( self : AsyncRetrieveAPIView , * args , ** kwargs ): obj = await self . retrieve ( * args , ** kwargs ) if obj is None and self . raise_on_none : self . raise_not_found_error () return self . serialize_response ( \"retrieve\" , obj ) cls . _patch_endpoint_signature ( endpoint , cls . retrieve ) return endpoint if TYPE_CHECKING : retrieve : Callable [ ... , Awaitable [ Any ]] else : @abstractmethod async def retrieve ( self , * args , ** kwargs ) -> Any : raise NotImplementedError","title":"AsyncRetrieveAPIView"},{"location":"reference/views/#fastapi_views.views.api.AsyncUpdateAPIView","text":"Bases: BaseUpdateAPIView Async update api view Source code in fastapi_views/views/api.py 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 class AsyncUpdateAPIView ( BaseUpdateAPIView ): \"\"\"Async update api view\"\"\" @classmethod def get_update_endpoint ( cls ) -> Endpoint : async def endpoint ( self , * args , ** kwargs ): obj = await self . update ( * args , ** kwargs ) if not self . return_on_update : return Response ( status_code = HTTP_200_OK ) if obj is None and self . raise_on_none : self . raise_not_found_error () return self . serialize_response ( \"update\" , obj ) cls . _patch_endpoint_signature ( endpoint , cls . update ) return endpoint if TYPE_CHECKING : update : Callable [ ... , Awaitable [ Any ]] else : @abstractmethod async def update ( self , * args , ** kwargs ): raise NotImplementedError","title":"AsyncUpdateAPIView"},{"location":"reference/views/#fastapi_views.views.api.CreateAPIView","text":"Bases: BaseCreateAPIView Sync create api view Source code in fastapi_views/views/api.py 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 class CreateAPIView ( BaseCreateAPIView ): \"\"\"Sync create api view\"\"\" @classmethod def get_create_endpoint ( cls ) -> Endpoint : def endpoint ( self : CreateAPIView , * args , ** kwargs ): obj = self . create ( * args , ** kwargs ) if self . return_on_create : return self . serialize_response ( \"create\" , obj , HTTP_201_CREATED ) # return self.get_response(content=None, status_code=HTTP_201_CREATED) return Response ( status_code = HTTP_201_CREATED ) cls . _patch_endpoint_signature ( endpoint , cls . create ) return endpoint if TYPE_CHECKING : create : Callable [ ... , Any ] else : @abstractmethod def create ( self , * args , ** kwargs ) -> Any : raise NotImplementedError","title":"CreateAPIView"},{"location":"reference/views/#fastapi_views.views.api.DestroyAPIView","text":"Bases: BaseDestroyAPIView Sync destroy api view Source code in fastapi_views/views/api.py 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 class DestroyAPIView ( BaseDestroyAPIView ): \"\"\"Sync destroy api view\"\"\" @classmethod def get_destroy_endpoint ( cls ) -> Endpoint : def endpoint ( self , * args , ** kwargs ): self . destroy ( * args , ** kwargs ) return Response ( status_code = HTTP_204_NO_CONTENT ) cls . _patch_endpoint_signature ( endpoint , cls . destroy ) return endpoint if TYPE_CHECKING : destroy : Callable [ ... , None ] else : @abstractmethod def destroy ( self , * args , ** kwargs ) -> None : raise NotImplementedError","title":"DestroyAPIView"},{"location":"reference/views/#fastapi_views.views.api.ListAPIView","text":"Bases: BaseListAPIView , ABC Sync list api view Source code in fastapi_views/views/api.py 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 class ListAPIView ( BaseListAPIView , ABC ): \"\"\"Sync list api view\"\"\" @classmethod def get_list_endpoint ( cls ) -> Endpoint : def endpoint ( self : ListAPIView , * args , ** kwargs ): objects = self . list ( * args , ** kwargs ) return self . serialize_response ( \"list\" , objects ) cls . _patch_endpoint_signature ( endpoint , cls . list ) return endpoint if TYPE_CHECKING : list : Callable [ ... , Any ] else : @abstractmethod def list ( self , * args , ** kwargs ) -> Any : raise NotImplementedError","title":"ListAPIView"},{"location":"reference/views/#fastapi_views.views.api.PartialUpdateAPIView","text":"Bases: BasePartialUpdateAPIView Sync partial update api view Source code in fastapi_views/views/api.py 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 class PartialUpdateAPIView ( BasePartialUpdateAPIView ): \"\"\"Sync partial update api view\"\"\" @classmethod def get_partial_update_endpoint ( cls ) -> Endpoint : def endpoint ( self , * args , ** kwargs ): obj = self . partial_update ( * args , ** kwargs ) if obj is None and self . raise_on_none : self . raise_not_found_error () if self . return_on_update : return self . serialize_response ( \"partial_update\" , obj ) return Response ( status_code = HTTP_200_OK ) cls . _patch_endpoint_signature ( endpoint , cls . partial_update ) return endpoint if TYPE_CHECKING : partial_update : Callable [ ... , Any ] else : @abstractmethod def partial_update ( self , * args , ** kwargs ): raise NotImplementedError","title":"PartialUpdateAPIView"},{"location":"reference/views/#fastapi_views.views.api.RetrieveAPIView","text":"Bases: BaseRetrieveAPIView Sync retrieve api view Source code in fastapi_views/views/api.py 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 class RetrieveAPIView ( BaseRetrieveAPIView ): \"\"\"Sync retrieve api view\"\"\" @classmethod def get_retrieve_endpoint ( cls ) -> Endpoint : def endpoint ( self : RetrieveAPIView , * args , ** kwargs ): obj = self . retrieve ( * args , ** kwargs ) if obj is None and self . raise_on_none : self . raise_not_found_error () return self . serialize_response ( \"retrieve\" , obj ) cls . _patch_endpoint_signature ( endpoint , cls . retrieve ) return endpoint if TYPE_CHECKING : retrieve : Callable [ ... , Any ] else : @abstractmethod def retrieve ( self , * args , ** kwargs ) -> Any : raise NotImplementedError","title":"RetrieveAPIView"},{"location":"reference/views/#fastapi_views.views.api.UpdateAPIView","text":"Bases: BaseUpdateAPIView Sync update api view Source code in fastapi_views/views/api.py 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 class UpdateAPIView ( BaseUpdateAPIView ): \"\"\"Sync update api view\"\"\" @classmethod def get_update_endpoint ( cls ) -> Endpoint : def endpoint ( self , * args , ** kwargs ): obj = self . update ( * args , ** kwargs ) if not self . return_on_update : return Response ( status_code = HTTP_200_OK ) if obj is None and self . raise_on_none : self . raise_not_found_error () return self . serialize_response ( \"update\" , obj ) cls . _patch_endpoint_signature ( endpoint , cls . update ) return endpoint if TYPE_CHECKING : update : Callable [ ... , Any ] else : @abstractmethod def update ( self , * args , ** kwargs ): raise NotImplementedError","title":"UpdateAPIView"},{"location":"reference/views/#fastapi_views.views.api.View","text":"Bases: ABC Basic View Class Usage: from fastapi_views.views.functools import get, post, delete class MyCustomViewClass(View): @get(\"\") async def get_items(self, ...): ... @post(path=\"\") Source code in fastapi_views/views/api.py 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 class View ( ABC ): \"\"\" Basic View Class Usage: from fastapi_views.views.functools import get, post, delete class MyCustomViewClass(View): @get(\"\") async def get_items(self, ...): ... @post(path=\"\") \"\"\" api_component_name : str default_response_class : type [ Response ] = JsonResponse errors : tuple [ APIError , ... ] = () def __init__ ( self , request : Request , response : Response ) -> None : self . request = request self . response = response @classmethod def get_name ( cls ) -> str : return getattr ( cls , \"api_component_name\" , cls . __name__ ) @classmethod def get_slug_name ( cls ) -> str : return f \" { cls . get_name () . lower () . replace ( ' ' , '_' ) } \" @classmethod def get_api_actions ( cls , prefix : str = \"\" ): yield from cls . get_custom_api_actions ( prefix ) @classmethod def get_custom_endpoint ( cls , func ): options = getattr ( func , \"kwargs\" , {}) status_code = options . get ( \"status_code\" , None ) response_class = options . get ( \"response_class\" , None ) async def _async_endpoint ( self , * args , ** kwargs ): res = await func ( self , * args , ** kwargs ) return self . get_response ( content = res , status_code = status_code , response_class = response_class ) def _sync_endpoint ( self , * args , ** kwargs ): res = func ( self , * args , ** kwargs ) return self . get_response ( content = res , status_code = status_code , response_class = response_class ) endpoint = ( _async_endpoint if asyncio . iscoroutinefunction ( func ) else _sync_endpoint ) cls . _patch_endpoint_signature ( endpoint , func ) return endpoint @classmethod def get_custom_api_actions ( cls , prefix : str = \"\" ): for _ , route_endpoint in inspect . getmembers ( cls , lambda member : callable ( member ) and hasattr ( member , VIEWSET_ROUTE_FLAG ) ): endpoint = cls . get_custom_endpoint ( route_endpoint ) yield cls . get_api_action ( endpoint , prefix = prefix , name = f \" { endpoint . __name__ } { cls . get_name () } \" ) @classmethod def get_api_action ( cls , endpoint : Callable , prefix : str = \"\" , path : str = \"\" , ** kwargs ) -> dict [ str , Any ]: kw = getattr ( endpoint , \"kwargs\" , {}) kwargs . update ( kw ) path = kwargs . get ( \"path\" , path ) kwargs [ \"endpoint\" ] = endpoint kwargs [ \"path\" ] = prefix + path kwargs . setdefault ( \"name\" , endpoint . __name__ ) endpoint_name = kwargs [ \"name\" ] kwargs . setdefault ( \"methods\" , [ \"GET\" ]) kwargs . setdefault ( \"operation_id\" , f \" { cls . get_slug_name () } _ { endpoint_name } \" ) kwargs [ \"responses\" ] = { e . model . get_status (): { \"model\" : e . model } for e in cls . errors } | kwargs . get ( \"responses\" , {}) return kwargs @classmethod def _patch_metadata ( cls , endpoint , method : Callable ) -> None : endpoint . __doc__ = method . __doc__ endpoint . __name__ = method . __name__ endpoint . kwargs = getattr ( method , \"kwargs\" , {}) @classmethod def _patch_endpoint_signature ( cls , endpoint , method : Callable ) -> None : old_signature = inspect . signature ( method ) old_parameters : list [ inspect . Parameter ] = list ( old_signature . parameters . values () ) old_first_parameter = old_parameters [ 0 ] new_first_parameter = old_first_parameter . replace ( default = Depends ( cls )) new_parameters = [ new_first_parameter ] + [ parameter . replace ( kind = inspect . Parameter . KEYWORD_ONLY ) for parameter in old_parameters [ 1 :] ] new_signature = old_signature . replace ( parameters = new_parameters ) endpoint . __signature__ = new_signature cls . _patch_metadata ( endpoint , method ) def get_response ( self , content : Any , status_code : Optional [ int ] = None , response_class : Optional [ type [ Response ]] = None , ) -> Response : if isinstance ( content , Response ): return content response_class = response_class or self . default_response_class return response_class ( content = content , status_code = status_code or self . response . status_code or HTTP_200_OK , headers = dict ( self . response . headers ), )","title":"View"},{"location":"reference/viewsets/","text":"APIViewSet Bases: ListAPIView , CreateAPIView , RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC APIViewSet Source code in fastapi_views/views/viewsets.py 87 88 89 90 class APIViewSet ( ListAPIView , CreateAPIView , RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC ): \"\"\"APIViewSet\"\"\" AsyncAPIViewSet Bases: AsyncListAPIView , AsyncCreateAPIView , AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC AsyncAPIViewSet Source code in fastapi_views/views/viewsets.py 93 94 95 96 97 98 99 100 101 class AsyncAPIViewSet ( AsyncListAPIView , AsyncCreateAPIView , AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC , ): \"\"\"AsyncAPIViewSet\"\"\" AsyncGenericListCreateViewSet Bases: AsyncGenericListView , AsyncGenericCreateView , ABC AsyncGenericListCreateViewSet Source code in fastapi_views/views/viewsets.py 116 117 class AsyncGenericListCreateViewSet ( AsyncGenericListView , AsyncGenericCreateView , ABC ): \"\"\"AsyncGenericListCreateViewSet\"\"\" AsyncGenericListRetrieveUpdateDeleteViewSet Bases: AsyncGenericListView , AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC AsyncGenericListRetrieveUpdateDeleteViewSet Source code in fastapi_views/views/viewsets.py 148 149 150 151 152 153 154 155 class AsyncGenericListRetrieveUpdateDeleteViewSet ( AsyncGenericListView , AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC , ): \"\"\"AsyncGenericListRetrieveUpdateDeleteViewSet\"\"\" AsyncGenericReadOnlyViewSet Bases: AsyncGenericListView , AsyncGenericRetrieveView , ABC AsyncGenericReadOnlyViewSet Source code in fastapi_views/views/viewsets.py 108 109 class AsyncGenericReadOnlyViewSet ( AsyncGenericListView , AsyncGenericRetrieveView , ABC ): \"\"\"AsyncGenericReadOnlyViewSet\"\"\" AsyncGenericRetrieveUpdateDestroyAPIViewSet Bases: AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC AsyncGenericRetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 136 137 138 139 class AsyncGenericRetrieveUpdateDestroyAPIViewSet ( AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC ): \"\"\"AsyncGenericRetrieveUpdateDestroyAPIViewSet\"\"\" AsyncGenericRetrieveUpdateViewSet Bases: AsyncGenericRetrieveView , AsyncGenericUpdateView , ABC AsyncGenericRetrieveUpdateViewSet Source code in fastapi_views/views/viewsets.py 124 125 126 127 class AsyncGenericRetrieveUpdateViewSet ( AsyncGenericRetrieveView , AsyncGenericUpdateView , ABC ): \"\"\"AsyncGenericRetrieveUpdateViewSet\"\"\" AsyncGenericViewSet Bases: AsyncGenericListView , AsyncGenericCreateView , AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC AsyncGenericViewSet Source code in fastapi_views/views/viewsets.py 169 170 171 172 173 174 175 176 177 class AsyncGenericViewSet ( AsyncGenericListView , AsyncGenericCreateView , AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC , ): \"\"\"AsyncGenericViewSet\"\"\" AsyncListCreateAPIViewSet Bases: AsyncListAPIView , AsyncCreateAPIView , ABC AsyncListCreateAPIViewSet Source code in fastapi_views/views/viewsets.py 41 42 class AsyncListCreateAPIViewSet ( AsyncListAPIView , AsyncCreateAPIView , ABC ): \"\"\"AsyncListCreateAPIViewSet\"\"\" AsyncListCreateDestroyAPIViewSet Bases: AsyncListAPIView , AsyncCreateAPIView , AsyncDestroyAPIView , ABC AsyncListCreateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 81 82 83 84 class AsyncListCreateDestroyAPIViewSet ( AsyncListAPIView , AsyncCreateAPIView , AsyncDestroyAPIView , ABC ): \"\"\"AsyncListCreateDestroyAPIViewSet\"\"\" AsyncListRetrieveUpdateDestroyAPIViewSet Bases: AsyncListAPIView , AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC AsyncListRetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 71 72 73 74 class AsyncListRetrieveUpdateDestroyAPIViewSet ( AsyncListAPIView , AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC ): \"\"\"AsyncListRetrieveUpdateDestroyAPIViewSet\"\"\" AsyncReadOnlyAPIViewSet Bases: AsyncListAPIView , AsyncRetrieveAPIView , ABC AsyncReadOnlyAPIViewSet Source code in fastapi_views/views/viewsets.py 33 34 class AsyncReadOnlyAPIViewSet ( AsyncListAPIView , AsyncRetrieveAPIView , ABC ): \"\"\"AsyncReadOnlyAPIViewSet\"\"\" AsyncRetrieveUpdateAPIViewSet Bases: AsyncRetrieveAPIView , AsyncUpdateAPIView , ABC AsyncRetrieveUpdateAPIViewSet Source code in fastapi_views/views/viewsets.py 49 50 class AsyncRetrieveUpdateAPIViewSet ( AsyncRetrieveAPIView , AsyncUpdateAPIView , ABC ): \"\"\"AsyncRetrieveUpdateAPIViewSet\"\"\" AsyncRetrieveUpdateDestroyAPIViewSet Bases: AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC AsyncRetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 59 60 61 62 class AsyncRetrieveUpdateDestroyAPIViewSet ( AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC ): \"\"\"AsyncRetrieveUpdateDestroyAPIViewSet\"\"\" GenericListCreateViewSet Bases: GenericListView , GenericCreateView , ABC GenericListCreateViewSet Source code in fastapi_views/views/viewsets.py 112 113 class GenericListCreateViewSet ( GenericListView , GenericCreateView , ABC ): \"\"\"GenericListCreateViewSet\"\"\" GenericListRetrieveUpdateDeleteViewSet Bases: GenericListView , GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC GenericListRetrieveUpdateDeleteViewSet Source code in fastapi_views/views/viewsets.py 142 143 144 145 class GenericListRetrieveUpdateDeleteViewSet ( GenericListView , GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC ): \"\"\"GenericListRetrieveUpdateDeleteViewSet\"\"\" GenericReadOnlyViewSet Bases: GenericListView , GenericRetrieveView , ABC GenericReadOnlyViewSet Source code in fastapi_views/views/viewsets.py 104 105 class GenericReadOnlyViewSet ( GenericListView , GenericRetrieveView , ABC ): \"\"\"GenericReadOnlyViewSet\"\"\" GenericRetrieveUpdateDestroyAPIViewSet Bases: GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC GenericRetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 130 131 132 133 class GenericRetrieveUpdateDestroyAPIViewSet ( GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC ): \"\"\"GenericRetrieveUpdateDestroyAPIViewSet\"\"\" GenericRetrieveUpdateViewSet Bases: GenericRetrieveView , GenericUpdateView , ABC GenericRetrieveUpdateViewSet Source code in fastapi_views/views/viewsets.py 120 121 class GenericRetrieveUpdateViewSet ( GenericRetrieveView , GenericUpdateView , ABC ): \"\"\"GenericRetrieveUpdateViewSet\"\"\" GenericViewSet Bases: GenericListView , GenericCreateView , GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC GenericViewSet Source code in fastapi_views/views/viewsets.py 158 159 160 161 162 163 164 165 166 class GenericViewSet ( GenericListView , GenericCreateView , GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC , ): \"\"\"GenericViewSet\"\"\" ListCreateAPIViewSet Bases: ListAPIView , CreateAPIView , ABC ListCreateAPIViewSet Source code in fastapi_views/views/viewsets.py 37 38 class ListCreateAPIViewSet ( ListAPIView , CreateAPIView , ABC ): \"\"\"ListCreateAPIViewSet\"\"\" ListCreateDestroyAPIViewSet Bases: ListAPIView , CreateAPIView , DestroyAPIView , ABC ListCreateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 77 78 class ListCreateDestroyAPIViewSet ( ListAPIView , CreateAPIView , DestroyAPIView , ABC ): \"\"\"ListCreateDestroyAPIViewSet\"\"\" ListRetrieveUpdateDestroyAPIViewSet Bases: ListAPIView , RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC ListRetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 65 66 67 68 class ListRetrieveUpdateDestroyAPIViewSet ( ListAPIView , RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC ): \"\"\"ListRetrieveUpdateDestroyAPIViewSet\"\"\" ReadOnlyAPIViewSet Bases: ListAPIView , RetrieveAPIView , ABC ReadOnlyAPIViewSet Source code in fastapi_views/views/viewsets.py 29 30 class ReadOnlyAPIViewSet ( ListAPIView , RetrieveAPIView , ABC ): \"\"\"ReadOnlyAPIViewSet\"\"\" RetrieveUpdateAPIViewSet Bases: RetrieveAPIView , UpdateAPIView , ABC RetrieveUpdateAPIViewSet Source code in fastapi_views/views/viewsets.py 45 46 class RetrieveUpdateAPIViewSet ( RetrieveAPIView , UpdateAPIView , ABC ): \"\"\"RetrieveUpdateAPIViewSet\"\"\" RetrieveUpdateDestroyAPIViewSet Bases: RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC RetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 53 54 55 56 class RetrieveUpdateDestroyAPIViewSet ( RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC ): \"\"\"RetrieveUpdateDestroyAPIViewSet\"\"\"","title":"View sets"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.APIViewSet","text":"Bases: ListAPIView , CreateAPIView , RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC APIViewSet Source code in fastapi_views/views/viewsets.py 87 88 89 90 class APIViewSet ( ListAPIView , CreateAPIView , RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC ): \"\"\"APIViewSet\"\"\"","title":"APIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncAPIViewSet","text":"Bases: AsyncListAPIView , AsyncCreateAPIView , AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC AsyncAPIViewSet Source code in fastapi_views/views/viewsets.py 93 94 95 96 97 98 99 100 101 class AsyncAPIViewSet ( AsyncListAPIView , AsyncCreateAPIView , AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC , ): \"\"\"AsyncAPIViewSet\"\"\"","title":"AsyncAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncGenericListCreateViewSet","text":"Bases: AsyncGenericListView , AsyncGenericCreateView , ABC AsyncGenericListCreateViewSet Source code in fastapi_views/views/viewsets.py 116 117 class AsyncGenericListCreateViewSet ( AsyncGenericListView , AsyncGenericCreateView , ABC ): \"\"\"AsyncGenericListCreateViewSet\"\"\"","title":"AsyncGenericListCreateViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncGenericListRetrieveUpdateDeleteViewSet","text":"Bases: AsyncGenericListView , AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC AsyncGenericListRetrieveUpdateDeleteViewSet Source code in fastapi_views/views/viewsets.py 148 149 150 151 152 153 154 155 class AsyncGenericListRetrieveUpdateDeleteViewSet ( AsyncGenericListView , AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC , ): \"\"\"AsyncGenericListRetrieveUpdateDeleteViewSet\"\"\"","title":"AsyncGenericListRetrieveUpdateDeleteViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncGenericReadOnlyViewSet","text":"Bases: AsyncGenericListView , AsyncGenericRetrieveView , ABC AsyncGenericReadOnlyViewSet Source code in fastapi_views/views/viewsets.py 108 109 class AsyncGenericReadOnlyViewSet ( AsyncGenericListView , AsyncGenericRetrieveView , ABC ): \"\"\"AsyncGenericReadOnlyViewSet\"\"\"","title":"AsyncGenericReadOnlyViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncGenericRetrieveUpdateDestroyAPIViewSet","text":"Bases: AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC AsyncGenericRetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 136 137 138 139 class AsyncGenericRetrieveUpdateDestroyAPIViewSet ( AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC ): \"\"\"AsyncGenericRetrieveUpdateDestroyAPIViewSet\"\"\"","title":"AsyncGenericRetrieveUpdateDestroyAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncGenericRetrieveUpdateViewSet","text":"Bases: AsyncGenericRetrieveView , AsyncGenericUpdateView , ABC AsyncGenericRetrieveUpdateViewSet Source code in fastapi_views/views/viewsets.py 124 125 126 127 class AsyncGenericRetrieveUpdateViewSet ( AsyncGenericRetrieveView , AsyncGenericUpdateView , ABC ): \"\"\"AsyncGenericRetrieveUpdateViewSet\"\"\"","title":"AsyncGenericRetrieveUpdateViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncGenericViewSet","text":"Bases: AsyncGenericListView , AsyncGenericCreateView , AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC AsyncGenericViewSet Source code in fastapi_views/views/viewsets.py 169 170 171 172 173 174 175 176 177 class AsyncGenericViewSet ( AsyncGenericListView , AsyncGenericCreateView , AsyncGenericRetrieveView , AsyncGenericUpdateView , AsyncGenericDestroyView , ABC , ): \"\"\"AsyncGenericViewSet\"\"\"","title":"AsyncGenericViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncListCreateAPIViewSet","text":"Bases: AsyncListAPIView , AsyncCreateAPIView , ABC AsyncListCreateAPIViewSet Source code in fastapi_views/views/viewsets.py 41 42 class AsyncListCreateAPIViewSet ( AsyncListAPIView , AsyncCreateAPIView , ABC ): \"\"\"AsyncListCreateAPIViewSet\"\"\"","title":"AsyncListCreateAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncListCreateDestroyAPIViewSet","text":"Bases: AsyncListAPIView , AsyncCreateAPIView , AsyncDestroyAPIView , ABC AsyncListCreateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 81 82 83 84 class AsyncListCreateDestroyAPIViewSet ( AsyncListAPIView , AsyncCreateAPIView , AsyncDestroyAPIView , ABC ): \"\"\"AsyncListCreateDestroyAPIViewSet\"\"\"","title":"AsyncListCreateDestroyAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncListRetrieveUpdateDestroyAPIViewSet","text":"Bases: AsyncListAPIView , AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC AsyncListRetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 71 72 73 74 class AsyncListRetrieveUpdateDestroyAPIViewSet ( AsyncListAPIView , AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC ): \"\"\"AsyncListRetrieveUpdateDestroyAPIViewSet\"\"\"","title":"AsyncListRetrieveUpdateDestroyAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncReadOnlyAPIViewSet","text":"Bases: AsyncListAPIView , AsyncRetrieveAPIView , ABC AsyncReadOnlyAPIViewSet Source code in fastapi_views/views/viewsets.py 33 34 class AsyncReadOnlyAPIViewSet ( AsyncListAPIView , AsyncRetrieveAPIView , ABC ): \"\"\"AsyncReadOnlyAPIViewSet\"\"\"","title":"AsyncReadOnlyAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncRetrieveUpdateAPIViewSet","text":"Bases: AsyncRetrieveAPIView , AsyncUpdateAPIView , ABC AsyncRetrieveUpdateAPIViewSet Source code in fastapi_views/views/viewsets.py 49 50 class AsyncRetrieveUpdateAPIViewSet ( AsyncRetrieveAPIView , AsyncUpdateAPIView , ABC ): \"\"\"AsyncRetrieveUpdateAPIViewSet\"\"\"","title":"AsyncRetrieveUpdateAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.AsyncRetrieveUpdateDestroyAPIViewSet","text":"Bases: AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC AsyncRetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 59 60 61 62 class AsyncRetrieveUpdateDestroyAPIViewSet ( AsyncRetrieveAPIView , AsyncUpdateAPIView , AsyncDestroyAPIView , ABC ): \"\"\"AsyncRetrieveUpdateDestroyAPIViewSet\"\"\"","title":"AsyncRetrieveUpdateDestroyAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.GenericListCreateViewSet","text":"Bases: GenericListView , GenericCreateView , ABC GenericListCreateViewSet Source code in fastapi_views/views/viewsets.py 112 113 class GenericListCreateViewSet ( GenericListView , GenericCreateView , ABC ): \"\"\"GenericListCreateViewSet\"\"\"","title":"GenericListCreateViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.GenericListRetrieveUpdateDeleteViewSet","text":"Bases: GenericListView , GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC GenericListRetrieveUpdateDeleteViewSet Source code in fastapi_views/views/viewsets.py 142 143 144 145 class GenericListRetrieveUpdateDeleteViewSet ( GenericListView , GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC ): \"\"\"GenericListRetrieveUpdateDeleteViewSet\"\"\"","title":"GenericListRetrieveUpdateDeleteViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.GenericReadOnlyViewSet","text":"Bases: GenericListView , GenericRetrieveView , ABC GenericReadOnlyViewSet Source code in fastapi_views/views/viewsets.py 104 105 class GenericReadOnlyViewSet ( GenericListView , GenericRetrieveView , ABC ): \"\"\"GenericReadOnlyViewSet\"\"\"","title":"GenericReadOnlyViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.GenericRetrieveUpdateDestroyAPIViewSet","text":"Bases: GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC GenericRetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 130 131 132 133 class GenericRetrieveUpdateDestroyAPIViewSet ( GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC ): \"\"\"GenericRetrieveUpdateDestroyAPIViewSet\"\"\"","title":"GenericRetrieveUpdateDestroyAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.GenericRetrieveUpdateViewSet","text":"Bases: GenericRetrieveView , GenericUpdateView , ABC GenericRetrieveUpdateViewSet Source code in fastapi_views/views/viewsets.py 120 121 class GenericRetrieveUpdateViewSet ( GenericRetrieveView , GenericUpdateView , ABC ): \"\"\"GenericRetrieveUpdateViewSet\"\"\"","title":"GenericRetrieveUpdateViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.GenericViewSet","text":"Bases: GenericListView , GenericCreateView , GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC GenericViewSet Source code in fastapi_views/views/viewsets.py 158 159 160 161 162 163 164 165 166 class GenericViewSet ( GenericListView , GenericCreateView , GenericRetrieveView , GenericUpdateView , GenericDestroyView , ABC , ): \"\"\"GenericViewSet\"\"\"","title":"GenericViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.ListCreateAPIViewSet","text":"Bases: ListAPIView , CreateAPIView , ABC ListCreateAPIViewSet Source code in fastapi_views/views/viewsets.py 37 38 class ListCreateAPIViewSet ( ListAPIView , CreateAPIView , ABC ): \"\"\"ListCreateAPIViewSet\"\"\"","title":"ListCreateAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.ListCreateDestroyAPIViewSet","text":"Bases: ListAPIView , CreateAPIView , DestroyAPIView , ABC ListCreateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 77 78 class ListCreateDestroyAPIViewSet ( ListAPIView , CreateAPIView , DestroyAPIView , ABC ): \"\"\"ListCreateDestroyAPIViewSet\"\"\"","title":"ListCreateDestroyAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.ListRetrieveUpdateDestroyAPIViewSet","text":"Bases: ListAPIView , RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC ListRetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 65 66 67 68 class ListRetrieveUpdateDestroyAPIViewSet ( ListAPIView , RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC ): \"\"\"ListRetrieveUpdateDestroyAPIViewSet\"\"\"","title":"ListRetrieveUpdateDestroyAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.ReadOnlyAPIViewSet","text":"Bases: ListAPIView , RetrieveAPIView , ABC ReadOnlyAPIViewSet Source code in fastapi_views/views/viewsets.py 29 30 class ReadOnlyAPIViewSet ( ListAPIView , RetrieveAPIView , ABC ): \"\"\"ReadOnlyAPIViewSet\"\"\"","title":"ReadOnlyAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.RetrieveUpdateAPIViewSet","text":"Bases: RetrieveAPIView , UpdateAPIView , ABC RetrieveUpdateAPIViewSet Source code in fastapi_views/views/viewsets.py 45 46 class RetrieveUpdateAPIViewSet ( RetrieveAPIView , UpdateAPIView , ABC ): \"\"\"RetrieveUpdateAPIViewSet\"\"\"","title":"RetrieveUpdateAPIViewSet"},{"location":"reference/viewsets/#fastapi_views.views.viewsets.RetrieveUpdateDestroyAPIViewSet","text":"Bases: RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC RetrieveUpdateDestroyAPIViewSet Source code in fastapi_views/views/viewsets.py 53 54 55 56 class RetrieveUpdateDestroyAPIViewSet ( RetrieveAPIView , UpdateAPIView , DestroyAPIView , ABC ): \"\"\"RetrieveUpdateDestroyAPIViewSet\"\"\"","title":"RetrieveUpdateDestroyAPIViewSet"}]}