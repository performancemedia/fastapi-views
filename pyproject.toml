[tool.poetry]
name = "fastapi-views"
version = "0.3.0"
description = "FastAPI Class Views and utilities"
authors = ["Radzim Kowalow <radzim.kowalow@performance-media.pl>"]
readme = "README.md"
packages = [{ include = "fastapi_views" }]

[tool.poetry.scripts]
fastapi-views = "fastapi_views.cli:cli"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
typer = "^0.9.0"
fastapi = "^0.110.1"
pydantic = ">=2.0,<3.0"
pydantic-settings = ">=2.0,<3.0"
orjson = "^3.9.10"
opentelemetry-instrumentation-fastapi = { version = "*", optional = true }
starlette-exporter = { version = ">=0.21,<0.24", optional = true }
uvloop = { version = "^0.19.0", optional = true }
uvicorn = { version = "^0.27.1", optional = true }

[tool.poetry.extras]
all = ["uvloop", "starlette-exporter", "uvicorn", "opentelemetry-instrumentation-fastapi"]
uvloop = ["uvloop"]
prometheus = ["starlette-exporter"]
uvicorn = ["uvicorn"]
opentelemetry = ["opentelemetry-instrumentation-fastapi"]

[tool.poetry.group.dev.dependencies]
mypy = "^1.2.0"
ruff = "^0.1.11"
deptry = "^0.12.0"
bandit = "^1.7.4"
python-semantic-release = "^7.33.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.21.2"
pytest-cov = "^4.0.0"
pytest-sugar = "^0.9.7"
pytest-repeat = "^0.9.3"
asgi-lifespan = "^2.0.0"
httpx = "^0.23.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^8.2.1"
mkdocs-autorefs = "^0.4.1"
mkdocs-gen-files = ">=0.4,<0.6"
mkdocstrings = { version = ">=0.18", extras = ["python"] }
watchdog = ">=2.0,<4.0"

[tool.pytest.ini_options]
addopts = "--cov=./fastapi_views --count=3"
testpaths = ["./tests"]
asyncio_mode = "auto"

[tool.mypy]
python_version = 3.9
ignore_missing_imports = true
no_site_packages = true

[tool.ruff]
target-version = "py39"

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "B008", # do not perform function calls in argument defaults
    "E501", # line too long
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = true
docstring-code-line-length = "dynamic"
line-ending = "auto"

[tool.ruff.mccabe]
max-complexity = 8

[tool.deptry.per_rule_ignores]
DEP001 = ["opentelemetry", "yaml"]
DEP002 = ["uvloop", "uvicorn", "opentelemetry-instrumentation-fastapi"]
DEP003 = ["fastapi_views", "pydantic_core", "starlette", "typing_extensions", "annotated_types"]

[tool.semantic_release]
version_variable = ['fastapi_views/_version.py:__version__']
version_toml = 'pyproject.toml:tool.poetry.version'
version_pattern = [
    'docs/index.md:Version: (\d+\.\d+\.\d+)',
    'README.md:Version: (\d+\.\d+\.\d+)',
]
upload_to_repository = false
major_on_zero = true
hvcs = "github"
commit_message = "Bump version: {version}"
tag_commit = false

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
